{
  "pluginType": "DB",
  "pluginId": "postgres-plugin",
  "unpublishedAction": {
    "name": "post_collection",
    "datasource": {
      "name": "Postgres_latest",
      "pluginId": "postgres-plugin",
      "messages": [],
      "isAutoGenerated": false,
      "id": "Postgres_latest",
      "deleted": false,
      "policies": [],
      "userPermissions": []
    },
    "pageId": "collection_records_v2",
    "actionConfiguration": {
      "timeoutInMillisecond": 10000,
      "paginationType": "NONE",
      "encodeParamsToggle": true,
      "body": "WITH\nins_trip_revenue_collection_log AS (\n\t\tupdate finance_trip_invoices as u set \n\tid = u2.id,\n\treceived_amount = u2.received_amount + u.received_amount ,\n\tlast_user_data= '{{appsmith.store.user_data}}',\n\tstatus = case when u.total_price_after_vat_ait - (u2.received_amount + u.received_amount) <=0 then 'receiving-complete' else 'receiving-in-progress' end,\n\treceived_ait_amount = u2.received_ait_amount + u.received_ait_amount,\n\treceived_vat_amount = u2.received_vat_amount + u.received_vat_amount,\n\treceived_amount_wo_vat_ait = u2.received_amount_wo_vat_ait + u.received_amount_wo_vat_ait,\n\tupdated_at = now()\nfrom (values\n\t\t\t{{\n\t\t\tinvoice_table.selectedRows.map((a)=>\"(\" + \n\t\t\ta.id+\",\"+\n\t\t\ta.customColumn1+\",\"+\n\t\t\ta.customColumn3+\",\"+\n\t\t\ta.customColumn2+\",\"+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\ta.customColumn4 +\")\").join()}}\n\n) as u2(id,received_amount,received_ait_amount,received_vat_amount,received_amount_wo_vat_ait)\nwhere u2.id = u.id\nand u.id in ({{[...new Set(trip_table.selectedRows.map(a=>a.finance_trip_invoice_id))].join(\",\")}})\n\t\n\tRETURNING invoice_number),\n\t\nins_trip_level_invoice AS (\t\n\tupdate trip_level_invoice as u set \n\tid = u2.id,\n\treceived_amount = u2.received_amount + u.received_amount,\n\tstatus = case when u.total_price_after_vat_ait - (u2.received_amount + u.received_amount) <=0 then 'receiving-complete' else 'receiving-in-progress' end,\n\treceived_ait_amount = u2.received_ait_amount,\n\treceived_vat_amount = u2.received_vat_amount,\n\treceived_amount_wo_vat_ait = u2.received_amount_wo_vat_ait,\n\tupdated_at = now()\nfrom (values\n\t\t\t{{trip_table.selectedRows.map((a)=>\"(\" + \n\t\t\ta.id+\",\"+\n\t\t\ta.total_price_after_vat_ait+\",\"+\n\t\t\ta.ait+\",\"+\n\t\t\ta.vat+\",\"+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\ta.collectable +\")\").join()}}\n\n) as u2(id,received_amount,received_ait_amount,received_vat_amount,received_amount_wo_vat_ait)\nwhere u2.id = u.id\n),\n\nins_customer_collection_declation AS (\n\tupdate customer_collection_declation set adjusted_amount = adjusted_amount +\n{{trip_table.selectedRows.map((a)=>a.total_price_after_vat_ait).reduce((sum, cost)=>parseFloat(sum)+parseFloat(cost))}}, unadjusted_amount = received_amount - (adjusted_amount +\n{{trip_table.selectedRows.map((a)=>a.total_price_after_vat_ait).reduce((sum, cost)=>parseFloat(sum)+parseFloat(cost))}}), updated_at = now()\nwhere shop_id={{search_shop_id.selectedOptionValue}}\n\t),\n\tins_customer_collection_declation_log AS (\n\tupdate customer_collection_declation_log set adjusted_amount = adjusted_amount +\n{{trip_table.selectedRows.map((a)=>a.total_price_after_vat_ait).reduce((sum, cost)=>parseFloat(sum)+parseFloat(cost))}},unadjusted_amount = received_amount - (adjusted_amount +\n{{trip_table.selectedRows.map((a)=>a.total_price_after_vat_ait).reduce((sum, cost)=>parseFloat(sum)+parseFloat(cost))}}), updated_at = now()\nwhere single_customer_collection_declation_id={{appsmith.URL.queryParams.collection_id}}\n\t)\n\t\n\t\n\tupdate single_customer_collection_declation set adjusted_amount = adjusted_amount +\n{{trip_table.selectedRows.map((a)=>a.total_price_after_vat_ait).reduce((sum, cost)=>parseFloat(sum)+parseFloat(cost))}},unadjusted_amount = received_amount - (adjusted_amount +\n{{trip_table.selectedRows.map((a)=>a.total_price_after_vat_ait).reduce((sum, cost)=>parseFloat(sum)+parseFloat(cost))}}), updated_at = now()\nwhere single_customer_collection_declation.id={{appsmith.URL.queryParams.collection_id}}",
      "selfReferencingDataPaths": [],
      "pluginSpecifiedTemplates": [
        {
          "value": false
        }
      ]
    },
    "executeOnLoad": false,
    "dynamicBindingPathList": [
      {
        "key": "body"
      }
    ],
    "isValid": true,
    "invalids": [],
    "messages": [],
    "jsonPathKeys": [
      "\n\t\t\tinvoice_table.selectedRows.map((a)=>\"(\" + \n\t\t\ta.id+\",\"+\n\t\t\ta.customColumn1+\",\"+\n\t\t\ta.customColumn3+\",\"+\n\t\t\ta.customColumn2+\",\"+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\ta.customColumn4 +\")\").join()",
      "[...new Set(trip_table.selectedRows.map(a=>a.finance_trip_invoice_id))].join(\",\")",
      "appsmith.URL.queryParams.collection_id",
      "appsmith.store.user_data",
      "search_shop_id.selectedOptionValue",
      "trip_table.selectedRows.map((a)=>\"(\" + \n\t\t\ta.id+\",\"+\n\t\t\ta.total_price_after_vat_ait+\",\"+\n\t\t\ta.ait+\",\"+\n\t\t\ta.vat+\",\"+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\ta.collectable +\")\").join()",
      "trip_table.selectedRows.map((a)=>a.total_price_after_vat_ait).reduce((sum, cost)=>parseFloat(sum)+parseFloat(cost))"
    ],
    "userSetOnLoad": false,
    "confirmBeforeExecute": false,
    "policies": [],
    "userPermissions": []
  },
  "id": "collection_records_v2_post_collection",
  "deleted": false,
  "gitSyncId": "6231701cf1c0af1ceded5043_6398c055038c74195c0ab732"
}
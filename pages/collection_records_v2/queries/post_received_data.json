{
  "pluginType": "DB",
  "pluginId": "postgres-plugin",
  "unpublishedAction": {
    "name": "post_received_data",
    "datasource": {
      "name": "Postgres_latest",
      "pluginId": "postgres-plugin",
      "messages": [],
      "isAutoGenerated": false,
      "id": "Postgres_latest",
      "deleted": false,
      "policies": [],
      "userPermissions": []
    },
    "pageId": "collection_records_v2",
    "actionConfiguration": {
      "timeoutInMillisecond": 10000,
      "paginationType": "NONE",
      "encodeParamsToggle": true,
      "body": "insert into invoice_collectable_received(\n\tfinance_trip_invoices_id, received_amount, user_data, received_ait_amount, received_vat_amount, received_amount_wo_vat_ait,invoice_number, collection_medium,\n\ttrx_id, proof_type, vat_proof_type, ait_proof_type, vat_collection_medium, ait_collection_medium)\n\tvalues\n\t\t{{\n\t\t[...new Set((trip_table.selectedRows.map(a=>{\nreturn invoice_table.tableData.filter(b=>b.id==a.finance_trip_invoice_id).map(c=>\nc\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n)[0]\n})))].map((a)=>\"(\" + \n\t\t\ta.id+\",\"+\n\t\t\t(trip_table.selectedRows.filter(b=>b.finance_trip_invoice_id ==a.id)[0]?trip_table.selectedRows.filter(b=>b.finance_trip_invoice_id ==a.id).map(a=>a.total_price_after_vat_ait).reduce((sum, cost)=>parseFloat(sum)+parseFloat(cost))\n:0)+\",'\"+\n\t\t\tappsmith.store.user_data + \"',\"+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t \n\t\t\t(trip_table.selectedRows.filter(b=>b.finance_trip_invoice_id ==a.id)[0]?trip_table.selectedRows.filter(b=>b.finance_trip_invoice_id ==a.id).map(a=>a.ait).reduce((sum, cost)=>parseFloat(sum)+parseFloat(cost))\n:0)+\",\"+\n\t\t\t((trip_table.selectedRows.filter(b=>b.finance_trip_invoice_id ==a.id)[0]?trip_table.selectedRows.filter(b=>b.finance_trip_invoice_id ==a.id).map(a=>a.vat).reduce((sum, cost)=>parseFloat(sum)+parseFloat(cost))\n:0))+\",\"+\n\t\t\t((trip_table.selectedRows.filter(b=>b.finance_trip_invoice_id ==a.id)[0]?trip_table.selectedRows.filter(b=>b.finance_trip_invoice_id ==a.id).map(a=>a.collectable).reduce((sum, cost)=>parseFloat(sum)+parseFloat(cost))\n:0))+\",'\"+\t\t\t\t\t\t\t\t\t\t\t\t \n\t\t\ta.invoice_number +\"','\" + \n\t\t\tcollectionMediumSelect.selectedOptionLabel + \"','\"+\n\t    trxIdReceivedTxt.text + \"',\" +\n\t\t\t(proofReceivedFilePicker.files.length>0?\"'\"+JSON.stringify(proofReceivedFilePicker.files)+\"'\":null) + \t\t\t\",\" +\n\t\t\t(vat_proof.files.length>0?\"'\"+JSON.stringify(vat_proof.files)+\"'\":null)+ \",\"+\n\t\t\t(ait_proof.files.length>0?\"'\"+JSON.stringify(ait_proof.files)+\"'\":null) + \",'\"+\n\t\t\tvatCollectionMediumSelect.selectedOptionLabel + \"','\"+\n\t\t\taitCollectionMediumSelect.selectedOptionLabel\t+ \"')\"\n\t  \t).join()\n\t\t\n\t\t}}\n\t",
      "selfReferencingDataPaths": [],
      "pluginSpecifiedTemplates": [
        {
          "value": false
        }
      ]
    },
    "executeOnLoad": false,
    "dynamicBindingPathList": [
      {
        "key": "body"
      }
    ],
    "isValid": true,
    "invalids": [],
    "messages": [],
    "jsonPathKeys": [
      "\n\t\t[...new Set((trip_table.selectedRows.map(a=>{\nreturn invoice_table.tableData.filter(b=>b.id==a.finance_trip_invoice_id).map(c=>\nc\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n)[0]\n})))].map((a)=>\"(\" + \n\t\t\ta.id+\",\"+\n\t\t\t(trip_table.selectedRows.filter(b=>b.finance_trip_invoice_id ==a.id)[0]?trip_table.selectedRows.filter(b=>b.finance_trip_invoice_id ==a.id).map(a=>a.total_price_after_vat_ait).reduce((sum, cost)=>parseFloat(sum)+parseFloat(cost))\n:0)+\",'\"+\n\t\t\tappsmith.store.user_data + \"',\"+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t \n\t\t\t(trip_table.selectedRows.filter(b=>b.finance_trip_invoice_id ==a.id)[0]?trip_table.selectedRows.filter(b=>b.finance_trip_invoice_id ==a.id).map(a=>a.ait).reduce((sum, cost)=>parseFloat(sum)+parseFloat(cost))\n:0)+\",\"+\n\t\t\t((trip_table.selectedRows.filter(b=>b.finance_trip_invoice_id ==a.id)[0]?trip_table.selectedRows.filter(b=>b.finance_trip_invoice_id ==a.id).map(a=>a.vat).reduce((sum, cost)=>parseFloat(sum)+parseFloat(cost))\n:0))+\",\"+\n\t\t\t((trip_table.selectedRows.filter(b=>b.finance_trip_invoice_id ==a.id)[0]?trip_table.selectedRows.filter(b=>b.finance_trip_invoice_id ==a.id).map(a=>a.collectable).reduce((sum, cost)=>parseFloat(sum)+parseFloat(cost))\n:0))+\",'\"+\t\t\t\t\t\t\t\t\t\t\t\t \n\t\t\ta.invoice_number +\"','\" + \n\t\t\tcollectionMediumSelect.selectedOptionLabel + \"','\"+\n\t    trxIdReceivedTxt.text + \"',\" +\n\t\t\t(proofReceivedFilePicker.files.length>0?\"'\"+JSON.stringify(proofReceivedFilePicker.files)+\"'\":null) + \t\t\t\",\" +\n\t\t\t(vat_proof.files.length>0?\"'\"+JSON.stringify(vat_proof.files)+\"'\":null)+ \",\"+\n\t\t\t(ait_proof.files.length>0?\"'\"+JSON.stringify(ait_proof.files)+\"'\":null) + \",'\"+\n\t\t\tvatCollectionMediumSelect.selectedOptionLabel + \"','\"+\n\t\t\taitCollectionMediumSelect.selectedOptionLabel\t+ \"')\"\n\t  \t).join()\n\t\t\n\t\t"
    ],
    "userSetOnLoad": false,
    "confirmBeforeExecute": false,
    "policies": [],
    "userPermissions": []
  },
  "id": "collection_records_v2_post_received_data",
  "deleted": false,
  "gitSyncId": "6231701cf1c0af1ceded5043_639aa83f5b4b533c8eaa7cab"
}